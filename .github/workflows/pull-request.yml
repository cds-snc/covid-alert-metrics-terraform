name: "Pull requests"

on:
  pull_request:
    paths:
      - "aws/**"
      - "env/**"
      - ".github/workflows/**"
  workflow_dispatch:

env:
  TERRAFORM_VERSION: 0.14.2
  TERRAGRUNT_VERSION: v0.29.2
  TF_INPUT: false

jobs:

  tg-plan-dependencies:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: ca-central-1
    strategy:
      fail-fast: false
      matrix:
        include:
          - module_name: ecr
            environment: staging

          - module_name: ecr
            environment: production

          - module_name: s3
            environment: staging

          - module_name: s3
            environment: production

          - module_name: network
            environment: staging

          - module_name: network
            environment: production

          - module_name: sqs
            environment: staging

          - module_name: sqs
            environment: production

          - module_name: dynamodb
            environment: staging

          - module_name: dynamodb
            environment: production

          - module_name: cloudwatch_alarms
            environment: staging

          - module_name: cloudwatch_alarms
            environment: production

    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1.2.1
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}
          terraform_wrapper: false

      - name: Setup Terragrunt
        run: |
          mkdir bin
          wget -O bin/terragrunt https://github.com/gruntwork-io/terragrunt/releases/download/$TERRAGRUNT_VERSION/terragrunt_linux_amd64
          chmod +x bin/*
          echo "$GITHUB_WORKSPACE/bin" >> $GITHUB_PATH

      - name: Set Prod Version
        if: ${{ matrix.environment == 'production' }}
        run: |
          INFRASTRUCTURE_VERSION=`cat ./.github/workflows/manifest/prod_version.txt`
          echo "INFRASTRUCTURE_VERSION=$INFRASTRUCTURE_VERSION" >> $GITHUB_ENV

      - name: Terraform plan
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets[format('{0}_AWS_ACCESS_KEY_ID',matrix.environment)] }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets[format('{0}_AWS_SECRET_ACCESS_KEY',matrix.environment)] }}      
        uses: cds-snc/terraform-plan@v1
        with:
          directory: "env/${{ matrix.environment }}/${{ matrix.module_name }}"
          comment-delete: "true"
          comment-title: "${{ matrix.environment }}: ${{ matrix.module_name }}"
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          terragrunt: "true"

  tg-plan-dependents:
    needs: tg-plan-dependencies
    runs-on: ubuntu-latest
    env:
      AWS_REGION: ca-central-1
    strategy:
      fail-fast: false
      matrix:
        include:

          - module_name: etl_lambdas
            environment: staging

          - module_name: etl_lambdas
            environment: production

          - module_name: backoff_retry_lambda
            environment: staging

          - module_name: backoff_retry_lambda
            environment: production

          - module_name: ecs
            environment: staging

          - module_name: ecs
            environment: production

          - module_name: aggregate_metrics_lambda
            environment: staging

    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1.2.1
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}
          terraform_wrapper: false

      - name: Setup Terragrunt
        run: |
          mkdir bin
          wget -O bin/terragrunt https://github.com/gruntwork-io/terragrunt/releases/download/$TERRAGRUNT_VERSION/terragrunt_linux_amd64
          chmod +x bin/*
          echo "$GITHUB_WORKSPACE/bin" >> $GITHUB_PATH

      - name: Set Prod Version
        if: ${{ matrix.environment == 'production' }}
        run: |
          INFRASTRUCTURE_VERSION=`cat ./.github/workflows/manifest/prod_version.txt`
          echo "INFRASTRUCTURE_VERSION=$INFRASTRUCTURE_VERSION" >> $GITHUB_ENV

      - name: Terraform plan
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets[format('{0}_AWS_ACCESS_KEY_ID',matrix.environment)] }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets[format('{0}_AWS_SECRET_ACCESS_KEY',matrix.environment)] }}      
          TF_VAR_metrics_token: ${{ secrets[format('{0}_METRICS_TOKEN',matrix.environment)] }}
        uses: cds-snc/terraform-plan@v1
        with:
          directory: "env/${{ matrix.environment }}/${{ matrix.module_name }}"
          comment-delete: "true"
          comment-title: "${{ matrix.environment }}: ${{ matrix.module_name }}"
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          terragrunt: "true"          

  comment-end:
    if: always()
    needs: [tg-plan-dependents]
    runs-on: ubuntu-latest
    steps:

      - uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.issues.createComment({
              ...context.repo,
              issue_number: context.issue.number,
              body: "## üèÅ Plans are complete for this run"
            })
